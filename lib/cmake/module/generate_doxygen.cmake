# -------------------------------------------------------------------------------------- #
# Конфигурация генерации документации                                                    #
#                                                                                        #
# Этот скрипт находит Doxygen и создает цель для генерации документации на его основе.   #
# Он настраивает файл конфигурации Doxygen, задает необходимые пути и команды для        #
# автоматической сборки документации проекта.                                            #
# -------------------------------------------------------------------------------------- #

# Находим пакет Doxygen, который используется для генерации документации
find_package(Doxygen)

# Проверяем, найден ли Doxygen
if (DOXYGEN_FOUND)
    # Указываем путь к входному файлу конфигурации Doxygen (.doxyfile.in)
    set(DOXYGEN_IN ${VI_CMAKE_CURRENT_SOURCE_DIR}/.doxyfile.in)

    # Указываем путь к выходному файлу конфигурации Doxygen (doxygen), который будет сгенерирован
    set(DOXYGEN_OUT ${VI_CMAKE_CURRENT_BINARY_DIR}/doxygen)

    # Конфигурируем файл Doxygen, заменяя переменные в .doxyfile.in и создавая файл doxygen
    configure_file(${DOXYGEN_IN} ${DOXYGEN_OUT} @ONLY)

    # Создаем пользовательскую цель для генерации документации
    add_custom_target(${PROJECT_NAME}_docs ALL
            # Команда для запуска Doxygen с использованием сгенерированного файла конфигурации
            COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_OUT}
            # Указываем рабочую директорию для команды
            WORKING_DIRECTORY ${VI_CMAKE_CURRENT_BINARY_DIR}
            # Добавляем комментарий, который будет отображаться при выполнении команды
            COMMENT "Generating documentation with Doxygen"
            # Указываем, что команды должны быть интерпретированы как есть
            VERBATIM)
endif ()
