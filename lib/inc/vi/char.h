/**
 * @file char.h
 * @brief Заголовочный файл, который определяет типы данных для символов,
 *        а также конфигурирует тип @ref vi_char_t в зависимости от флага компиляции.
 *
 * Этот файл определяет несколько типов данных для 8-битных целых чисел:
 * знаковые и беззнаковые, а также предоставляет механизм выбора типа
 * для представления символов в зависимости от флага компиляции @c VI_CHAR_UNSIGNED.
 */

#ifndef VI_CHAR_H
#define VI_CHAR_H

#include "numeric.h"

/**
 * @def VI_SCHAR8_T_MIN
 * @brief Минимальное значение для типа VI_SCHAR8_T.
 *
 * Этот макрос задает минимальное значение для типа данных VI_SCHAR8_T.
 * Он эквивалентен значению макроса VI_S8_T_MIN.
 */
#define VI_SCHAR8_T_MIN VI_S8_T_MIN

/**
 * @def VI_SCHAR8_T_MAX
 * @brief Максимальное значение для типа VI_SCHAR8_T.
 *
 * Этот макрос задает максимальное значение для типа данных VI_SCHAR8_T.
 * Он эквивалентен значению макроса VI_S8_T_MAX.
 */
#define VI_SCHAR8_T_MAX VI_S8_T_MAX

/**
 * @def VI_SCHAR8_T_SIZE
 * @brief Размер типа VI_SCHAR8_T в байтах.
 *
 * Этот макрос возвращает размер типа данных VI_SCHAR8_T в байтах.
 * Он эквивалентен значению макроса VI_S8_T_SIZE.
 */
#define VI_SCHAR8_T_SIZE VI_S8_T_SIZE

/**
 * @typedef vi_schar8_t
 * @brief Тип данных для 8-битных знаковых целых чисел.
 *
 * Этот тип является синонимом для типа данных @ref vi_s8_t,
 * который представляет собой 8-битное знаковое целое число.
 */
typedef vi_s8_t vi_schar8_t;

/**
 * @def VI_UCHAR8_T_MIN
 * @brief Минимальное значение для типа VI_UCHAR8_T.
 *
 * Этот макрос задает минимальное значение для типа данных VI_UCHAR8_T.
 * Он эквивалентен значению макроса VI_U8_T_MIN.
 */
#define VI_UCHAR8_T_MIN VI_U8_T_MIN

/**
 * @def VI_UCHAR8_T_MAX
 * @brief Максимальное значение для типа VI_UCHAR8_T.
 *
 * Этот макрос задает максимальное значение для типа данных VI_UCHAR8_T.
 * Он эквивалентен значению макроса VI_U8_T_MAX.
 */
#define VI_UCHAR8_T_MAX VI_U8_T_MAX

/**
 * @def VI_UCHAR8_T_SIZE
 * @brief Размер типа VI_UCHAR8_T в байтах.
 *
 * Этот макрос возвращает размер типа данных VI_UCHAR8_T в байтах.
 * Он эквивалентен значению макроса VI_U8_T_SIZE.
 */
#define VI_UCHAR8_T_SIZE VI_U8_T_SIZE

/**
 * @typedef vi_uchar8_t
 * @brief Тип данных для 8-битных беззнаковых целых чисел.
 *
 * Этот тип является синонимом для типа данных @ref vi_u8_t,
 * который представляет собой 8-битное беззнаковое целое число.
 */
typedef vi_u8_t vi_uchar8_t;

#ifdef VI_CHAR_UNSIGNED
/**
 * @def VI_CHAR_T_MIN
 * @brief Минимальное значение для типа VI_CHAR_T.
 *
 * Этот макрос задает минимальное значение для типа данных VI_CHAR_T.
 * Он эквивалентен значению макроса VI_UCHAR8_T_MIN.
 */
#    define VI_CHAR_T_MIN VI_UCHAR8_T_MIN

/**
 * @def VI_CHAR_T_MAX
 * @brief Максимальное значение для типа VI_CHAR_T.
 *
 * Этот макрос задает максимальное значение для типа данных VI_CHAR_T.
 * Он эквивалентен значению макроса VI_UCHAR8_T_MAX.
 */
#    define VI_CHAR_T_MAX VI_UCHAR8_T_MAX

/**
 * @typedef vi_char_t
 * @brief Тип данных для символа (8-битный).
 *
 * Тип @ref vi_char_t представляет собой 8-битный символ, который может быть либо
 * знаковым, либо беззнаковым в зависимости от флага компиляции @ref VI_CHAR_UNSIGNED.
 *
 * - Если флаг @c VI_CHAR_UNSIGNED определён, то @ref vi_char_t является синонимом
 *   для типа @ref vi_uchar8_t, который представляет собой 8-битное беззнаковое целое число.
 *
 * @note Этот тип используется для представления символов,
 *       в зависимости от требований к знаковости.
 */
typedef vi_uchar8_t vi_char_t;
#else
/**
 * @def VI_CHAR_T_MIN
 * @brief Минимальное значение для типа VI_CHAR_T.
 *
 * Этот макрос задает минимальное значение для типа данных VI_CHAR_T.
 * Он эквивалентен значению макроса VI_SCHAR8_T_MIN.
 */
#    define VI_CHAR_T_MIN VI_SCHAR8_T_MIN

/**
 * @def VI_CHAR_T_MAX
 * @brief Максимальное значение для типа VI_CHAR_T.
 *
 * Этот макрос задает максимальное значение для типа данных VI_CHAR_T.
 * Он эквивалентен значению макроса VI_SCHAR8_T_MAX.
 */
#    define VI_CHAR_T_MAX VI_SCHAR8_T_MAX

/**
 * @typedef vi_char_t
 * @brief Тип данных для символа (8-битный).
 *
 * Тип @ref vi_char_t представляет собой 8-битный символ, который может быть либо
 * знаковым, либо беззнаковым в зависимости от флага компиляции @c VI_CHAR_UNSIGNED.
 *
 * - Если флаг @c VI_CHAR_UNSIGNED не определён, то @ref vi_char_t является синонимом
 *   для типа @ref vi_schar8_t, который представляет собой 8-битное знаковое целое число.
 *
 * @note Этот тип используется для представления символов,
 *       в зависимости от требований к знаковости.
 */
typedef vi_schar8_t vi_char_t;
#endif // VI_CHAR_UNSIGNED

#endif // VI_CHAR_H
