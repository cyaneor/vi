/**
 * @file compiler.h
 * @brief Комплексный заголовочный файл
 *        для определения характеристик компилятора и среды.
 *
 * Этот файл объединяет несколько заголовочных файлов,
 * которые предоставляют настройки и атрибуты компилятора,
 * а также обеспечивают единый интерфейс для управления версией компилятора,
 * разрядностью системы, поддержкой стандартов и атрибутами компилятора.
 *
 * Включаемые файлы:
 * - `compiler_version.h`: Определяет версию используемого компилятора.
 * - `compiler_extern_c.h`: Управляет линковкой C для совместимости с C++.
 * - `compiler_attribute.h`: Предоставляет различные атрибуты компилятора.
 * - `compiler_bit_depth.h`: Определяет разрядность системы (32 или 64 бита).
 * - `compiler_destructor.h`: Определяет атрибуты для вызова деструкторов.
 * - `compiler_constructor.h`: Определяет атрибуты для вызова конструкторов.
 * - `compiler_std_version.h`: Определяет используемую версию стандарта C.
 *
 * @note Использование этого заголовка упрощает кроссплатформенную разработку,
 *       обеспечивая консистентность и удобство при работе с различными компиляторами.
 */

#ifndef VI_COMPILER_H
#define VI_COMPILER_H

#include "compiler_attribute.h"
#include "compiler_bit_depth.h"
#include "compiler_constructor.h"
#include "compiler_destructor.h"
#include "compiler_extern_c.h"
#include "compiler_std_version.h"
#include "compiler_version.h"

/**
 * @def VI_COMPILER(N)
 * @brief Расширяется до соответствующего макроса,
 *        специфичного для компилятора.
 *
 * Этот макрос принимает один аргумент `N` и объединяет его
 * с `VI_COMPILER_` для формирования полного имени макроса,
 * специфичного для компилятора.
 *
 * @param N Суффикс определяемого макроса,
 *          специфичного для компилятора.
 */
#define VI_COMPILER(N) VI_COMPILER_##N

#endif // VI_COMPILER_H
