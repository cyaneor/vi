/**
 * @file nullptr.h
 * @brief Заголовочный файл для определения `nullptr` в языке C.
 *
 * Этот файл содержит макрос, который определяет `nullptr` как минимальное значение указателя
 * (`VI_PTR_T_MIN`), если код компилируется в языке C, где ключевое слово `nullptr` не
 * поддерживается.
 *
 * В языке C++, `nullptr` является встроенным ключевым словом для представления нулевого указателя.
 * В языке C его нет, и для его эмуляции используется минимальное значение указателя, которое
 * эквивалентно нулевому указателю.
 *
 * Включение этого файла позволяет использовать `nullptr` в коде на языке C, если компиляция
 * выполняется в окружении, где C++ не используется. Это позволяет унифицировать код
 * и использовать `nullptr` независимо от компилятора.
 *
 * Макросы:
 * - `nullptr` — определяется как `VI_PTR_T_MIN` в случае компиляции на C,
 *               если C++ не поддерживается.
 */

#ifndef VI_NULLPTR_H
#define VI_NULLPTR_H

#include "ptr.h"

#ifndef __cplusplus
/**
 * @def nullptr
 * @brief Определение `nullptr` в случае отсутствия поддержки C++.
 *
 * Этот макрос определяет `nullptr` как минимальное значение указателя (`VI_PTR_T_MIN`),
 * если код компилируется не в контексте языка C++.
 *
 * В языке C++, `nullptr` является ключевым словом для представления нулевого указателя,
 * но в C он не поддерживается, поэтому в этом случае используется значение, равное
 * минимальному указателю, который эквивалентен нулевому указателю.
 *
 * @note Этот макрос активируется только в случае, если код компилируется в языке C,
 *       что определяется через директиву препроцессора `#ifndef __cplusplus`.
 */
#    define nullptr VI_PTR_T_MIN
#endif // __cplusplus

#endif // VI_NULLPTR_H
